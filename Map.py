from reprint import output
import random
import time
import keyboard
import threading

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
CONSOLE_WIDTH = 120  # –®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Å–æ–ª–∏ –≤ —Å–∏–º–≤–æ–ª–∞—Ö (—Å –ø—Ä–æ–±–µ–ª–∞–º–∏)
CONSOLE_HEIGHT = 30  # –í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Å–æ–ª–∏
VIEW_WIDTH = 29  # –í–∏–¥–∏–º–∞—è —à–∏—Ä–∏–Ω–∞ –≤ –∫–ª–µ—Ç–∫–∞—Ö (120 —Å–∏–º–≤–æ–ª–æ–≤ / 2 –∏–∑-–∑–∞ –ø—Ä–æ–±–µ–ª–æ–≤)
VIEW_HEIGHT = 29  # –í–∏–¥–∏–º–∞—è –≤—ã—Å–æ—Ç–∞ –≤ –∫–ª–µ—Ç–∫–∞—Ö
MAP_WIDTH = 200  # –ü–æ–ª–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã
MAP_HEIGHT = 200  # –ü–æ–ª–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã

# –°–∏–º–≤–æ–ª—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
PLAYER = "@"
MONSTER = "M"  # –ó–∞–º–µ–Ω–∞ üëæ –Ω–∞ M
NPC = "N"  # –ó–∞–º–µ–Ω–∞ üôÇ –Ω–∞ N
CITY = "C"  # –ó–∞–º–µ–Ω–∞ üè∞ –Ω–∞ C
EMPTY = "\033[32mW\033[0m"  # –ó–µ–ª—ë–Ω—ã–π W (–¥–µ—Ä–µ–≤–æ) —Å ANSI-–∫–æ–¥–æ–º

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ "—á–µ–ª–æ–≤–µ–∫–∞" (2x3) –≤ —Ü–µ–Ω—Ç—Ä–µ –∫–∞—Ä—Ç—ã
player_x, player_y = MAP_WIDTH // 2, MAP_HEIGHT // 2

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
field = [[EMPTY for _ in range(MAP_WIDTH)] for _ in range(MAP_HEIGHT)]


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
def place_random(symbol, count=1):
    for _ in range(count):
        while True:
            x, y = random.randint(0, MAP_WIDTH - 1), random.randint(0, MAP_HEIGHT - 1)
            if field[y][x] == EMPTY and not (player_x <= x < player_x + 3 and player_y <= y < player_y + 2):
                field[y][x] = symbol
                break


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
def generate_map():
    global field
    field = [[EMPTY for _ in range(MAP_WIDTH)] for _ in range(MAP_HEIGHT)]
    draw_person(player_x, player_y)
    place_random(MONSTER, 10)
    place_random(NPC, 10)
    place_random(CITY, 6)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ "—á–µ–ª–æ–≤–µ–∫–∞" —Ä–∞–∑–º–µ—Ä–æ–º 2x3
def draw_person(x, y):
    for i in range(2):
        for j in range(3):
            if 0 <= y + i < MAP_HEIGHT and 0 <= x + j < MAP_WIDTH:
                if field[y + i][x + j] == EMPTY:
                    field[y + i][x + j] = PLAYER


# –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –¥–≤–∏–≥–∞—Ç—å—Å—è
def can_move(new_x, new_y):
    for i in range(2):
        for j in range(3):
            if (0 <= new_y + i < MAP_HEIGHT and 0 <= new_x + j < MAP_WIDTH and
                    field[new_y + i][new_x + j] in [MONSTER, CITY, NPC]):
                return False
    return True


# –î–≤–∏–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
def move_player(direction):
    global player_x, player_y
    old_x, old_y = player_x, player_y
    new_x, new_y = player_x, player_y

    if direction == 'w' and player_y > 0:
        new_y -= 1
    elif direction == 's' and player_y < MAP_HEIGHT - 2:
        new_y += 1
    elif direction == 'a' and player_x > 0:
        new_x -= 1
    elif direction == 'd' and player_x < MAP_WIDTH - 3:
        new_x += 1

    if (new_x, new_y) != (old_x, old_y) and can_move(new_x, new_y):
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é –ø–æ–∑–∏—Ü–∏—é
        for i in range(2):
            for j in range(3):
                if (0 <= old_y + i < MAP_HEIGHT and 0 <= old_x + j < MAP_WIDTH and
                        field[old_y + i][old_x + j] == PLAYER):
                    field[old_y + i][old_x + j] = EMPTY
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é
        player_x, player_y = new_x, new_y
        draw_person(player_x, player_y)


# –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
def interact():
    for i in range(2):
        for j in range(3):
            target = field[player_y + i][player_x + j]
            if target == MONSTER:
                print("–¢—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –º–æ–Ω—Å—Ç—Ä–∞! –ë–æ–π –Ω–∞—á–∞–ª—Å—è!")
            elif target == NPC:
                print("NPC –≥–æ–≤–æ—Ä–∏—Ç: –ü—Ä–∏–≤–µ—Ç, –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫!")
            elif target == CITY:
                print("–ñ–∏—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –≥–æ—Ä–æ–¥!")


# –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–æ–ª—è
def draw_field(out):
    while True:
        # –¶–µ–Ω—Ç—Ä "—á–µ–ª–æ–≤–µ–∫–∞" (—Å–µ—Ä–µ–¥–∏–Ω–∞ 2x3)
        center_x, center_y = player_x + 1, player_y + 1
        start_x = max(0, center_x - VIEW_WIDTH // 2)
        end_x = min(MAP_WIDTH, center_x + VIEW_WIDTH // 2)
        start_y = max(0, center_y - VIEW_HEIGHT // 2)
        end_y = min(MAP_HEIGHT, center_y + VIEW_HEIGHT // 2)

        # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –≤–∏–¥–∏–º—É—é –æ–±–ª–∞—Å—Ç—å
        if end_x - start_x < VIEW_WIDTH:
            if start_x == 0:
                end_x = VIEW_WIDTH
            else:
                start_x = end_x - VIEW_WIDTH
        if end_y - start_y < VIEW_HEIGHT:
            if start_y == 0:
                end_y = VIEW_HEIGHT
            else:
                start_y = end_y - VIEW_HEIGHT

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
        for i, row_idx in enumerate(range(start_y, end_y)):
            row = " ".join([field[row_idx][j] for j in range(start_x, end_x)])
            out[i] = row

        time.sleep(0.1)


def main():
    generate_map()

    with output(initial_len=VIEW_HEIGHT, interval=0) as out:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        thread = threading.Thread(target=draw_field, args=(out,))
        thread.start()

        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏—à–∏
        keyboard.on_press_key("w", lambda _: move_player('w'))
        keyboard.on_press_key("s", lambda _: move_player('s'))
        keyboard.on_press_key("a", lambda _: move_player('a'))
        keyboard.on_press_key("d", lambda _: move_player('d'))
        keyboard.on_press_key("e", lambda _: interact())
        keyboard.on_press_key("q", lambda _: exit(0))

        # –î–µ—Ä–∂–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã–º
        thread.join()


if __name__ == "__main__":
    main()