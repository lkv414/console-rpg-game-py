from reprint import output
import random
import time

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
MAP_SIZE = 20
VISION_SIZE = 2  # –ü–æ–ª–µ –∑—Ä–µ–Ω–∏—è 2x2 –≤–æ–∫—Ä—É–≥ –∏–≥—Ä–æ–∫–∞

# –°–∏–º–≤–æ–ª—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
PLAYER = "üòä"
MONSTER = "üëæ"
NPC = "üôÇ"
CITY = "üè∞"
EMPTY = "‚¨ú"
BORDER = "üü•"


class GameMap:
    def __init__(self):
        self.size = MAP_SIZE
        self.map = [[EMPTY for _ in range(self.size)] for _ in range(self.size)]
        self.player_x = random.randint(0, MAP_SIZE - 1)
        self.player_y = random.randint(0, MAP_SIZE - 1)
        self.generate_map()

    def generate_map(self):
        # –û—á–∏—â–∞–µ–º –∫–∞—Ä—Ç—É
        self.map = [[EMPTY for _ in range(self.size)] for _ in range(self.size)]

        # –†–∞–∑–º–µ—â–∞–µ–º –∏–≥—Ä–æ–∫–∞
        self.map[self.player_y][self.player_x] = PLAYER

        # –†–∞–∑–º–µ—â–∞–µ–º –º–æ–Ω—Å—Ç—Ä–∞
        self.place_random(MONSTER)

        # –†–∞–∑–º–µ—â–∞–µ–º NPC
        self.place_random(NPC)

        # –†–∞–∑–º–µ—â–∞–µ–º –≥–æ—Ä–æ–¥
        self.place_random(CITY)

    def place_random(self, symbol):
        while True:
            x, y = random.randint(0, MAP_SIZE - 1), random.randint(0, MAP_SIZE - 1)
            if self.map[y][x] == EMPTY:
                self.map[y][x] = symbol
                break

    def display_map(self, out):
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –¥–ª—è –≤—ã–≤–æ–¥–∞ —á–µ—Ä–µ–∑ reprinter
        for y in range(self.size):
            row = ""
            for x in range(self.size):
                if abs(self.player_x - x) <= VISION_SIZE and abs(self.player_y - y) <= VISION_SIZE:
                    row += self.map[y][x] + " "
                else:
                    row += "‚¨õ "
            out[y] = row
        out[self.size] = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: w - –≤–≤–µ—Ä—Ö, s - –≤–Ω–∏–∑, a - –ª–µ–≤–æ, d - –ø—Ä–∞–≤–æ, e - –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ, q - –≤—ã—Ö–æ–¥"

    def move_player(self, direction):
        new_x, new_y = self.player_x, self.player_y
        if direction == 'w' and self.player_y > 0:
            new_y -= 1
        elif direction == 's' and self.player_y < MAP_SIZE - 1:
            new_y += 1
        elif direction == 'a' and self.player_x > 0:
            new_x -= 1
        elif direction == 'd' and self.player_x < MAP_SIZE - 1:
            new_x += 1

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—ã–π –±–ª–æ–∫
        if new_x < 0 or new_x >= MAP_SIZE or new_y < 0 or new_y >= MAP_SIZE:
            return self.switch_map()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
        target = self.map[new_y][new_x]
        if target == MONSTER:
            print("–¢—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –º–æ–Ω—Å—Ç—Ä–∞! –ë–æ–π –Ω–∞—á–∞–ª—Å—è!")
        elif target == NPC:
            print("NPC –≥–æ–≤–æ—Ä–∏—Ç: –ü—Ä–∏–≤–µ—Ç, –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫!")
        elif target == CITY:
            self.enter_city()
        elif target == EMPTY:
            self.map[self.player_y][self.player_x] = EMPTY
            self.player_x, self.player_y = new_x, new_y
            self.map[self.player_y][self.player_x] = PLAYER

    def switch_map(self):
        print("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π –±–ª–æ–∫ –∫–∞—Ä—Ç—ã!")
        self.generate_map()

    def enter_city(self):
        print("–¢—ã –≤–æ—à–µ–ª –≤ –≥–æ—Ä–æ–¥!")
        action = input("–ì–æ–≤–æ—Ä–∏—Ç—å —Å –∂–∏—Ç–µ–ª—è–º–∏? (y/n): ").lower()
        if action == 'y':
            print("–ñ–∏—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –≥–æ—Ä–æ–¥!")


def main():
    game = GameMap()
    with output(initial_len=MAP_SIZE + 1, interval=0) as out:
        while True:
            game.display_map(out)
            time.sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–≤–æ–¥–∞
            action = input("–¢–≤–æ–π —Ö–æ–¥: ").lower()
            if action in ['w', 's', 'a', 'd']:
                game.move_player(action)
            elif action == 'e':
                if game.map[game.player_y][game.player_x] == CITY:
                    game.enter_city()
            elif action == 'q':
                print("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!")
                break


if __name__ == "__main__":
    main()


